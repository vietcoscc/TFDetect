project.buildDir = 'gradleBuild'
getProject().setBuildDir('gradleBuild')

buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'org.apache.httpcomponents:httpclient:4.5.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        google()
    }
}

//def cpuType = 'armeabi-v7a'

project.ext.ASSET_DIR = projectDir.toString() + '/assets'

apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId = 'org.tensorflow.demo'
        minSdkVersion 21
        targetSdkVersion 23
        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=gcc', '-DANDROID_STL=gnustl_static'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path './jni/CMakeLists.txt'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            // Android demo app sources.
            java {
                srcDir 'src'
            }

            manifest.srcFile 'AndroidManifest.xml'
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = [project.ext.ASSET_DIR]
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ['src/main/jni', 'src/main/jniLibs/']
        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libtess.so'
        pickFirst 'lib/x86/libtess.so'
        pickFirst 'lib/armeabi-v7a/liblept.so'
        pickFirst 'lib/x86/liblept.so'
        pickFirst 'lib/armeabi-v7a/libopenalpr-native.so'
        pickFirst 'lib/x86/libopenalpr-native.so'
        pickFirst 'lib/armeabi-v7a/libopencv_java.so'
        pickFirst 'lib/x86/lib/libopencv_java.so'
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'org.tensorflow:tensorflow-android:+'
    compile 'com.github.SandroMachado:openalpr-android:1.1.2'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.google.code.gson:gson:2.8.2'
    implementation 'com.android.support:design:27.0.2'
}
